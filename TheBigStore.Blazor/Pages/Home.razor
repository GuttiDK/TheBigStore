﻿@using TheBigStore.Blazor.Service.Interfaces

@inject NotificationService _notificationService
@inject NavigationManager _navigationManager



@page "/"
<PageTitle>Home</PageTitle>

<div class="container">
    
    <div class="row border-bottom border-primary">
        <div class="col-8">
            <h1>Catalog</h1>
        </div>
    </div>
    @if (isLoading)
    {
        <RadzenStack AlignItems="AlignItems.Center" Class="rz-m-12" Gap="2rem">
            <RadzenProgressBarCircular Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate" />  
        </RadzenStack>
    }
    <div class="row mt-2">
        @foreach (var category in Categories)
        {
            <div class="col-4 mt-2">
                <RadzenButton class="col-12" Variant="Variant.Outlined" Click=@(() => _navigationManager.NavigateTo("/ItemView/" + category.Id)) Text="@category.CategoryName" ButtonStyle="ButtonStyle.Primary" />
            </div>
        }
    </div>

    <div class="mb-2 mt-2">
        <hr />
    </div>
    <div class="text-center">
        <h2>Featured Items</h2>
    </div>
    <TheBigStore.Blazor.Component.ItemDisplayComponent Items="FeaturedItems" />

</div>

@code {
    @using TheBigStore.Blazor.Models

    @inject ICategoryService _categoryService
    @inject IItemService _itemService

    public List<Category> Categories { get; set; } = new();
    public List<Item> FeaturedItems { get; set; } = new();
    public bool isLoading { get; set; } = false;

    protected override async Task OnInitializedAsync()
    {
        isLoading = true;
        Categories = await _categoryService.GetAllCategoriesAsync();
        FeaturedItems = await _itemService.GetFeaturedItemsAsync();
        isLoading = false;
    }



}
